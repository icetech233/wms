@namespace MyAntDesignApp2.Pages.Settings
@page "/settings/attrs"

@using MyAntDesignApp2.Models

<GridContent Id="#main">

    <Alert Message=@_attrPageKey Type="success"
           ShowIcon="true"
           Style="margin-bottom:12px" />

    <Space Style="margin-bottom:12px"
           Size=@("middle")>
        <SpaceItem>
            <Button Color=@Color.Green8 Icon="@IconType.Fill.PlusCircle"
                    Type="@ButtonType.Primary">
                新增
            </Button>

            <Button Color=@Color.Geekblue7 Icon="@IconType.Outline.Reload"
                    Type="@ButtonType.Primary"
                    OnClick="Refresh">
                刷新
            </Button>
        </SpaceItem>
    </Space>

    <Table TItem="Attr" DataSource="@attrList" HidePagination>
        <Column Title="属性ID" @bind-Field="@context.AttrID" />
        <Column Title="属性名称" @bind-Field="@context.AttrName" />

@*         <PropertyColumn Property="c=>c.Tags">
            @foreach (var tag in context.Tags)
            {
                var color = tag.Length > 5 ? "geekblue" : "green";
                if (tag == "loser")
                {
                    color = "volcano";
                }
                <Tag Color="@color">@tag</Tag>
            }
        </PropertyColumn> *@

        <PropertyColumn Property="c=>c.CreatedAt" Sortable />
        <PropertyColumn Property="c=>c.UpdatedAt" Sortable></PropertyColumn>

        <ActionColumn Title="操作">
            <Space>
                <SpaceItem>
                    <Button OnClick="()=>Delete(context.AttrID)">详情</Button>
                </SpaceItem>
                <SpaceItem>
                    <Button Danger Icon="@IconType.Fill.Delete" 
                    Type="@ButtonType.Primary"
                    OnClick="()=>Delete(context.AttrID)" />
                </SpaceItem>
            </Space>
        </ActionColumn>

    </Table>
</GridContent>

@code {
    string size = "middle";


    private void Delete(long id)
    {
        //   forecasts = forecasts.Where(x => x.Id != id).ToArray();
        //   _total = forecasts.Length;
    }


}