@page "/"

<GridContent>
    <Card>
        <Body>
            <Alert Message="留白没有做."
                   Type="warning"
                   ShowIcon=@(true)
                   Banner
                    Style="margin: -12px; margin-bottom: 24px" />
         </Body>
     </Card>


     <Table DataSource="skuStockList" TItem="StockItem" RowClassName="@(_=>"editable-row")"
           Bordered 
           FooterTemplate=@footerTemplate(addItem)>

         <PropertyColumn Title="Id" Property="c=>c.Id" Width="50" Fixed="left">
             <span>@context.Id</span>
         </PropertyColumn>
         <Column TData="string" Title="型号">
             @if (!editCache[context.Id].edit)
            {
                @context.SkuType
            }
            else
            {
                <Input @bind-Value="editCache[context.Id].data.SkuType" />
            }
        </Column>
        <Column TData="string" Title="Mac地址">
            @if (!editCache[context.Id].edit)
            {
                @context.Mac
            }
            else
            {
                <Input @bind-Value="editCache[context.Id].data.Mac" />
            }
        </Column>
        <Column TData="string" Title="Iccid号">
            @if (!editCache[context.Id].edit)
            {
                @context.Iccid
            }
            else
            {
                <Input @bind-Value="editCache[context.Id].data.Iccid" />
            }
        </Column>
        <ActionColumn Title="操作">
            @if (!editCache[context.Id].edit)
            {
                <Button Size=@("default") OnClick="() => startEdit(context.Id)" Style=@("margin-right: 8px;")
                        Icon="@IconType.Outline.Edit"></Button>

                <Button Size=@("default") OnClick="() => deleteItem(context.Id)"
                        Icon="@IconType.Fill.Delete"
                    Danger Type="@ButtonType.Primary"></Button>
            }
            else
            {
                <Button Size=@("default") OnClick="() => saveEdit(context.Id)" Style=@("margin-right: 8px;")
                        Icon="@IconType.Outline.Save">
                    保存
                </Button>

                <Button Size=@("default") OnClick="() => cancelEdit(context.Id)" Style=@("margin-right: 8px;")
                        Icon="@IconType.Outline.CloseCircle">
                    取消
                </Button>
            }
        </ActionColumn>

    </Table>

    <style>

    </style>

</GridContent>



@code {

    private const string buttonSize = "small";

    record StockItem
    {
        public int Id { get; set; }
        public string SkuType { get; set; }
        public string Mac { get; set; }
        public string Iccid { get; set; }
    };

    Dictionary<int, (bool edit, StockItem data)> editCache = new Dictionary<int, (bool edit, StockItem data)>();
    List<StockItem> skuStockList = new();

    // int i = 0;
    // string editId;

    void startEdit(int id)
    {
        (bool edit, StockItem data) editData = editCache[id];
        editCache[id] = (true, editData.data with { }); // add a copy in cache
    }

    void deleteItem(int id)
    {
        int index = skuStockList.FindIndex(item => item.Id == id);
        skuStockList.RemoveAt(index);
        editCache.Remove(id);
    }

    void cancelEdit(int id)
    {
        StockItem data = skuStockList.FirstOrDefault(item => item.Id == id);
        editCache[id] = (false, data); // recovery
    }

    void saveEdit(int id)
    {
        int index = skuStockList.FindIndex(item => item.Id == id);
        skuStockList[index] = editCache[id].data; // apply the copy to data source
        editCache[id] = (false, skuStockList[index]); // don't affect rows in editing
    }

    protected override void OnInitialized()
    {
        // 数据
        skuStockList = Enumerable.Range(0, 6)
        .Select(i => new StockItem
                {
                    Id = i + 1,
                    SkuType = "IIG3000-4G",
                    Mac = "99:50:AA:AA:05:01",
                    Iccid = "89860463112070018782"
                }).ToList();
        // 初始化
        skuStockList.ForEach(item =>
        {
            editCache[item.Id] = (false, item);
        });
    }

    void addItem()
    {
        int lastSkuId = skuStockList.Last().Id;
        StockItem item = new StockItem
        {
            Id = lastSkuId + 1,
            SkuType = "IIG3000-4G",
            Mac = "99:99:AA:00:00:00",
            Iccid = "89860463112070018782"
        };
        editCache[item.Id] = (true, item);
        skuStockList.Add(item);
    }

    RenderFragment footerTemplate(Action clickA) => @<Button Type="primary" OnClick=clickA>添加一行数据</Button>;

}
